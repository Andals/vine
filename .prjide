vine=$PWD in=tool/in.vim {
 README.md
 composer.json
 composer.lock
 phpunit.xml.dist
 src=src {
  Component=Component {
   Bootstrap=Bootstrap {
    Base.php
    Web.php
   }
   Container=Container {
    ContainerInterface.php
    Obj.php
    Web.php
   }
   Controller=Controller {
    Base.php
    ControllerInterface.php
    Dispatcher.php
   }
   Http=Http {
    Request.php
    RequestInterface.php
    Response.php
    ResponseInterface.php
   }
   Log=Log {
    Logger.php
    Formater=Formater {
     FormaterInterface.php
     General.php
     Noop.php
    }
    Writer=Writer {
     File.php
     Noop.php
     WriterInterface.php
    }
   }
   Mysql=Mysql {
    Driver.php
    Error.php
    Dao=Dao {
     Base.php
     SimpleSqlBuilder.php
    }
    Entity=Entity {
     Base.php
    }
   }
   Routing=Routing {
    Router.php
    RouterInterface.php
    Route=Route {
     Base.php
     Mvc.php
     RouteInterface.php
    }
    Rule=Rule {
     RuleInterface.php
    }
   }
   View=View {
    Base.php
    Simple.php
    ViewInterface.php
   }
  }
  Framework=Framework {
   App=App {
    Base.php
    Web.php
   }
   Error=Error {
    Errno.php
    Exception.php
   }
  }
 }
 tests=tests {
  bootstrap.php
  TestCase=TestCase {
   Log=Log {
    LoggerTest.php
   }
   Mysql=Mysql {
    DaoTest.php
    DriverTest.php
    EntityTest.php
   }
   View=View {
    SimpleTest.php
    view=view {
     simple=simple {
      assign_array_value.php
      assign_array_value_with_filter.php
      assign_string_value.php
      assign_string_value_with_filter.php
      render.php
      render.suffix
      render_data.php
      render_in_render.php
     }
    }
   }
  }
 }
 tool=tool {
  in.vim
  srcindex_cscope.sh
  srcindex_ctags.sh
 }
 vendor=vendor {
  autoload.php
  bin=bin {
   phpunit
  }
  composer=composer {
   ClassLoader.php
   autoload_classmap.php
   autoload_namespaces.php
   autoload_psr4.php
   autoload_real.php
   installed.json
  }
  doctrine=doctrine {
   instantiator=instantiator {
    CONTRIBUTING.md
    LICENSE
    README.md
    composer.json
    phpmd.xml.dist
    phpunit.xml.dist
    src=src {
     Doctrine=Doctrine {
      Instantiator=Instantiator {
       Instantiator.php
       InstantiatorInterface.php
       Exception=Exception {
        ExceptionInterface.php
        InvalidArgumentException.php
        UnexpectedValueException.php
       }
      }
     }
    }
    tests=tests {
     DoctrineTest=DoctrineTest {
      InstantiatorPerformance=InstantiatorPerformance {
       InstantiatorPerformanceEvent.php
      }
      InstantiatorTest=InstantiatorTest {
       InstantiatorTest.php
       Exception=Exception {
        InvalidArgumentExceptionTest.php
        UnexpectedValueExceptionTest.php
       }
      }
      InstantiatorTestAsset=InstantiatorTestAsset {
       AbstractClassAsset.php
       ArrayObjectAsset.php
       ExceptionAsset.php
       FinalExceptionAsset.php
       PharAsset.php
       PharExceptionAsset.php
       SerializableArrayObjectAsset.php
       SimpleSerializableAsset.php
       SimpleTraitAsset.php
       UnCloneableAsset.php
       UnserializeExceptionArrayObjectAsset.php
       WakeUpNoticesAsset.php
       XMLReaderAsset.php
      }
     }
    }
   }
  }
  phpdocumentor=phpdocumentor {
   reflection-docblock=reflection-docblock {
    LICENSE
    README.md
    composer.json
    composer.lock
    phpunit.xml.dist
    src=src {
     phpDocumentor=phpDocumentor {
      Reflection=Reflection {
       DocBlock.php
       DocBlock=DocBlock {
        Context.php
        Description.php
        Location.php
        Serializer.php
        Tag.php
        Tag=Tag {
         AuthorTag.php
         CoversTag.php
         DeprecatedTag.php
         ExampleTag.php
         LinkTag.php
         MethodTag.php
         ParamTag.php
         PropertyReadTag.php
         PropertyTag.php
         PropertyWriteTag.php
         ReturnTag.php
         SeeTag.php
         SinceTag.php
         SourceTag.php
         ThrowsTag.php
         UsesTag.php
         VarTag.php
         VersionTag.php
        }
        Type=Type {
         Collection.php
        }
       }
      }
     }
    }
    tests=tests {
     phpDocumentor=phpDocumentor {
      Reflection=Reflection {
       DocBlockTest.php
       DocBlock=DocBlock {
        DescriptionTest.php
        TagTest.php
        Tag=Tag {
         CoversTagTest.php
         DeprecatedTagTest.php
         ExampleTagTest.php
         LinkTagTest.php
         MethodTagTest.php
         ParamTagTest.php
         ReturnTagTest.php
         SeeTagTest.php
         SinceTagTest.php
         SourceTagTest.php
         ThrowsTagTest.php
         UsesTagTest.php
         VarTagTest.php
         VersionTagTest.php
        }
        Type=Type {
         CollectionTest.php
        }
       }
      }
     }
    }
   }
  }
  phpspec=phpspec {
   prophecy=prophecy {
    CHANGES.md
    CONTRIBUTING.md
    LICENSE
    README.md
    composer.json
    spec=spec {
     Prophecy=Prophecy {
      ArgumentSpec.php
      ProphetSpec.php
      Argument=Argument {
       ArgumentsWildcardSpec.php
       Token=Token {
        AnyValueTokenSpec.php
        AnyValuesTokenSpec.php
        ArrayCountTokenSpec.php
        ArrayEntryTokenSpec.php
        ArrayEveryEntryTokenSpec.php
        CallbackTokenSpec.php
        ExactValueTokenSpec.php
        IdenticalValueTokenSpec.php
        LogicalAndTokenSpec.php
        LogicalNotTokenSpec.php
        ObjectStateTokenSpec.php
        StringContainsTokenSpec.php
        TypeTokenSpec.php
       }
      }
      Call=Call {
       CallCenterSpec.php
       CallSpec.php
      }
      Comparator=Comparator {
       ClosureComparatorSpec.php
       FactorySpec.php
      }
      Doubler=Doubler {
       DoublerSpec.php
       LazyDoubleSpec.php
       NameGeneratorSpec.php
       ClassPatch=ClassPatch {
        DisableConstructorPatchSpec.php
        HhvmExceptionPatchSpec.php
        KeywordPatchSpec.php
        MagicCallPatchSpec.php
        ProphecySubjectPatchSpec.php
        ReflectionClassNewInstancePatchSpec.php
        SplFileInfoPatchSpec.php
        TraversablePatchSpec.php
       }
       Generator=Generator {
        ClassCodeGeneratorSpec.php
        ClassCreatorSpec.php
        ClassMirrorSpec.php
        Node=Node {
         ArgumentNodeSpec.php
         ClassNodeSpec.php
         MethodNodeSpec.php
        }
       }
      }
      Exception=Exception {
       Call=Call {
        UnexpectedCallExceptionSpec.php
       }
       Doubler=Doubler {
        ClassCreatorExceptionSpec.php
        ClassMirrorExceptionSpec.php
        ClassNotFoundExceptionSpec.php
        DoubleExceptionSpec.php
        InterfaceNotFoundExceptionSpec.php
        MethodNotFoundExceptionSpec.php
       }
       Prediction=Prediction {
        AggregateExceptionSpec.php
        NoCallsExceptionSpec.php
        UnexpectedCallsCountExceptionSpec.php
        UnexpectedCallsExceptionSpec.php
       }
       Prophecy=Prophecy {
        MethodProphecyExceptionSpec.php
        ObjectProphecyExceptionSpec.php
       }
      }
      Prediction=Prediction {
       CallPredictionSpec.php
       CallTimesPredictionSpec.php
       CallbackPredictionSpec.php
       NoCallsPredictionSpec.php
      }
      Promise=Promise {
       CallbackPromiseSpec.php
       ReturnArgumentPromiseSpec.php
       ReturnPromiseSpec.php
       ThrowPromiseSpec.php
      }
      Prophecy=Prophecy {
       MethodProphecySpec.php
       ObjectProphecySpec.php
       RevealerSpec.php
      }
      Util=Util {
       StringUtilSpec.php
      }
     }
    }
    src=src {
     Prophecy=Prophecy {
      Argument.php
      Prophet.php
      Argument=Argument {
       ArgumentsWildcard.php
       Token=Token {
        AnyValueToken.php
        AnyValuesToken.php
        ArrayCountToken.php
        ArrayEntryToken.php
        ArrayEveryEntryToken.php
        CallbackToken.php
        ExactValueToken.php
        IdenticalValueToken.php
        LogicalAndToken.php
        LogicalNotToken.php
        ObjectStateToken.php
        StringContainsToken.php
        TokenInterface.php
        TypeToken.php
       }
      }
      Call=Call {
       Call.php
       CallCenter.php
      }
      Comparator=Comparator {
       ClosureComparator.php
       Factory.php
      }
      Doubler=Doubler {
       CachedDoubler.php
       DoubleInterface.php
       Doubler.php
       LazyDouble.php
       NameGenerator.php
       ClassPatch=ClassPatch {
        ClassPatchInterface.php
        DisableConstructorPatch.php
        HhvmExceptionPatch.php
        KeywordPatch.php
        MagicCallPatch.php
        ProphecySubjectPatch.php
        ReflectionClassNewInstancePatch.php
        SplFileInfoPatch.php
        TraversablePatch.php
       }
       Generator=Generator {
        ClassCodeGenerator.php
        ClassCreator.php
        ClassMirror.php
        ReflectionInterface.php
        Node=Node {
         ArgumentNode.php
         ClassNode.php
         MethodNode.php
        }
       }
      }
      Exception=Exception {
       Exception.php
       InvalidArgumentException.php
       Call=Call {
        UnexpectedCallException.php
       }
       Doubler=Doubler {
        ClassCreatorException.php
        ClassMirrorException.php
        ClassNotFoundException.php
        DoubleException.php
        DoublerException.php
        InterfaceNotFoundException.php
        MethodNotFoundException.php
        ReturnByReferenceException.php
       }
       Prediction=Prediction {
        AggregateException.php
        FailedPredictionException.php
        NoCallsException.php
        PredictionException.php
        UnexpectedCallsCountException.php
        UnexpectedCallsException.php
       }
       Prophecy=Prophecy {
        MethodProphecyException.php
        ObjectProphecyException.php
        ProphecyException.php
       }
      }
      Prediction=Prediction {
       CallPrediction.php
       CallTimesPrediction.php
       CallbackPrediction.php
       NoCallsPrediction.php
       PredictionInterface.php
      }
      Promise=Promise {
       CallbackPromise.php
       PromiseInterface.php
       ReturnArgumentPromise.php
       ReturnPromise.php
       ThrowPromise.php
      }
      Prophecy=Prophecy {
       MethodProphecy.php
       ObjectProphecy.php
       ProphecyInterface.php
       ProphecySubjectInterface.php
       Revealer.php
       RevealerInterface.php
      }
      Util=Util {
       ExportUtil.php
       StringUtil.php
      }
     }
    }
   }
  }
  phpunit=phpunit {
   php-code-coverage=php-code-coverage {
    CONTRIBUTING.md
    ChangeLog-2.2.md
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    build=build {
     travis-ci.xml
    }
    scripts=scripts {
     auto_append.php
     auto_prepend.php
    }
    src=src {
     CodeCoverage.php
     CodeCoverage=CodeCoverage {
      Driver.php
      Exception.php
      Filter.php
      Util.php
      Driver=Driver {
       HHVM.php
       PHPDBG.php
       Xdebug.php
      }
      Exception=Exception {
       UnintentionallyCoveredCode.php
      }
      Report=Report {
       Clover.php
       Crap4j.php
       Factory.php
       HTML.php
       Node.php
       PHP.php
       Text.php
       XML.php
       HTML=HTML {
        Renderer.php
        Renderer=Renderer {
         Dashboard.php
         Directory.php
         File.php
         Template=Template {
          coverage_bar.html.dist
          dashboard.html.dist
          directory.html.dist
          directory_item.html.dist
          file.html.dist
          file_item.html.dist
          method_item.html.dist
          css=css {
           bootstrap.min.css
           nv.d3.min.css
           style.css
          }
          fonts=fonts {
           glyphicons-halflings-regular.eot
           glyphicons-halflings-regular.svg
           glyphicons-halflings-regular.ttf
           glyphicons-halflings-regular.woff
           glyphicons-halflings-regular.woff2
          }
          js=js {
           bootstrap.min.js
           d3.min.js
           holder.min.js
           html5shiv.min.js
           jquery.min.js
           nv.d3.min.js
           respond.min.js
          }
         }
        }
       }
       Node=Node {
        Directory.php
        File.php
        Iterator.php
       }
       XML=XML {
        Directory.php
        File.php
        Node.php
        Project.php
        Tests.php
        Totals.php
        File=File {
         Coverage.php
         Method.php
         Report.php
         Unit.php
        }
       }
      }
      Util=Util {
       InvalidArgumentHelper.php
      }
     }
    }
    tests=tests {
     TestCase.php
     PHP=PHP {
      CodeCoverageTest.php
      CodeCoverage=CodeCoverage {
       FilterTest.php
       UtilTest.php
       Report=Report {
        CloverTest.php
        FactoryTest.php
       }
      }
     }
     _files=_files {
      BankAccount-clover.xml
      BankAccount.php
      BankAccountTest.php
      CoverageClassExtendedTest.php
      CoverageClassTest.php
      CoverageFunctionParenthesesTest.php
      CoverageFunctionParenthesesWhitespaceTest.php
      CoverageFunctionTest.php
      CoverageMethodOneLineAnnotationTest.php
      CoverageMethodParenthesesTest.php
      CoverageMethodParenthesesWhitespaceTest.php
      CoverageMethodTest.php
      CoverageNoneTest.php
      CoverageNotPrivateTest.php
      CoverageNotProtectedTest.php
      CoverageNotPublicTest.php
      CoverageNothingTest.php
      CoveragePrivateTest.php
      CoverageProtectedTest.php
      CoveragePublicTest.php
      CoverageTwoDefaultClassAnnotations.php
      CoveredClass.php
      CoveredFunction.php
      NamespaceCoverageClassExtendedTest.php
      NamespaceCoverageClassTest.php
      NamespaceCoverageCoversClassPublicTest.php
      NamespaceCoverageCoversClassTest.php
      NamespaceCoverageMethodTest.php
      NamespaceCoverageNotPrivateTest.php
      NamespaceCoverageNotProtectedTest.php
      NamespaceCoverageNotPublicTest.php
      NamespaceCoveragePrivateTest.php
      NamespaceCoverageProtectedTest.php
      NamespaceCoveragePublicTest.php
      NamespaceCoveredClass.php
      NotExistingCoveredElementTest.php
      class-with-anonymous-function-clover.xml
      ignored-lines-clover.xml
      source_with_class_and_anonymous_function.php
      source_with_ignore.php
      source_with_namespace.php
      source_with_oneline_annotations.php
      source_without_ignore.php
      source_without_namespace.php
     }
    }
   }
   php-file-iterator=php-file-iterator {
    ChangeLog.md
    LICENSE
    README.md
    composer.json
    src=src {
     Facade.php
     Factory.php
     Iterator.php
    }
   }
   php-text-template=php-text-template {
    LICENSE
    README.md
    composer.json
    src=src {
     Template.php
    }
   }
   php-timer=php-timer {
    LICENSE
    README.md
    composer.json
    src=src {
     Timer.php
    }
    tests=tests {
     TimerTest.php
    }
   }
   php-token-stream=php-token-stream {
    LICENSE
    README.md
    build.xml
    composer.json
    build=build {
     phpunit.xml
    }
    src=src {
     Token.php
     Token=Token {
      Stream.php
      Stream=Stream {
       CachingFactory.php
      }
     }
    }
    tests=tests {
     TokenTest.php
     bootstrap.php
     Token=Token {
      ClassTest.php
      ClosureTest.php
      FunctionTest.php
      IncludeTest.php
      InterfaceTest.php
      NamespaceTest.php
     }
     _fixture=_fixture {
      classExtendsNamespacedClass.php
      classInNamespace.php
      classInScopedNamespace.php
      closure.php
      issue19.php
      issue30.php
      multipleNamespacesWithOneClassUsingBraces.php
      multipleNamespacesWithOneClassUsingNonBraceSyntax.php
      source.php
      source2.php
      source3.php
      source4.php
      source5.php
     }
    }
   }
   phpunit=phpunit {
    CODE_OF_CONDUCT.md
    CONTRIBUTING.md
    ChangeLog-4.0.md
    ChangeLog-4.1.md
    ChangeLog-4.2.md
    ChangeLog-4.3.md
    ChangeLog-4.4.md
    ChangeLog-4.5.md
    ChangeLog-4.6.md
    ChangeLog-4.7.md
    LICENSE
    README.md
    build.xml
    composer.json
    phpdox.xml.dist
    phpunit
    phpunit.xml.dist
    phpunit.xsd
    build=build {
     ca.pem
     phar-autoload.php.in
     phar-manifest.php
     phar-version.php
     travis-ci-fail.xml
    }
    src=src {
     Exception.php
     Extensions=Extensions {
      GroupTestSuite.php
      PhptTestCase.php
      PhptTestSuite.php
      RepeatedTest.php
      TestDecorator.php
      TicketListener.php
     }
     Framework=Framework {
      Assert.php
      AssertionFailedError.php
      BaseTestListener.php
      CodeCoverageException.php
      Constraint.php
      Error.php
      Exception.php
      ExceptionWrapper.php
      ExpectationFailedException.php
      IncompleteTest.php
      IncompleteTestCase.php
      IncompleteTestError.php
      InvalidCoversTargetError.php
      InvalidCoversTargetException.php
      OutputError.php
      RiskyTest.php
      RiskyTestError.php
      SelfDescribing.php
      SkippedTest.php
      SkippedTestCase.php
      SkippedTestError.php
      SkippedTestSuiteError.php
      SyntheticError.php
      Test.php
      TestCase.php
      TestFailure.php
      TestListener.php
      TestResult.php
      TestSuite.php
      UnintentionallyCoveredCodeError.php
      Warning.php
      Assert=Assert {
       Functions.php
      }
      Constraint=Constraint {
       And.php
       ArrayHasKey.php
       ArraySubset.php
       Attribute.php
       Callback.php
       ClassHasAttribute.php
       ClassHasStaticAttribute.php
       Composite.php
       Count.php
       Exception.php
       ExceptionCode.php
       ExceptionMessage.php
       ExceptionMessageRegExp.php
       FileExists.php
       GreaterThan.php
       IsAnything.php
       IsEmpty.php
       IsEqual.php
       IsFalse.php
       IsIdentical.php
       IsInstanceOf.php
       IsJson.php
       IsNull.php
       IsTrue.php
       IsType.php
       JsonMatches.php
       LessThan.php
       Not.php
       ObjectHasAttribute.php
       Or.php
       PCREMatch.php
       SameSize.php
       StringContains.php
       StringEndsWith.php
       StringMatches.php
       StringStartsWith.php
       TraversableContains.php
       TraversableContainsOnly.php
       Xor.php
       JsonMatches=JsonMatches {
        ErrorMessageProvider.php
       }
      }
      Error=Error {
       Deprecated.php
       Notice.php
       Warning.php
      }
      TestSuite=TestSuite {
       DataProvider.php
      }
     }
     Runner=Runner {
      BaseTestRunner.php
      Exception.php
      StandardTestSuiteLoader.php
      TestSuiteLoader.php
      Version.php
      Filter=Filter {
       Factory.php
       Group.php
       Test.php
       Group=Group {
        Exclude.php
        Include.php
       }
      }
     }
     TextUI=TextUI {
      Command.php
      ResultPrinter.php
      TestRunner.php
     }
     Util=Util {
      Blacklist.php
      Configuration.php
      ErrorHandler.php
      Fileloader.php
      Filesystem.php
      Filter.php
      Getopt.php
      GlobalState.php
      InvalidArgumentHelper.php
      PHP.php
      Printer.php
      Regex.php
      String.php
      Test.php
      TestSuiteIterator.php
      Type.php
      XML.php
      Log=Log {
       JSON.php
       JUnit.php
       TAP.php
      }
      PHP=PHP {
       Default.php
       Windows.php
       Template=Template {
        TestCaseMethod.tpl.dist
       }
      }
      TestDox=TestDox {
       NamePrettifier.php
       ResultPrinter.php
       ResultPrinter=ResultPrinter {
        HTML.php
        Text.php
       }
      }
     }
    }
    tests=tests {
     bootstrap.php
     Extensions=Extensions {
      PhptTestCaseTest.php
      RepeatedTestTest.php
     }
     Fail=Fail {
      fail.phpt
     }
     Framework=Framework {
      AssertTest.php
      BaseTestListenerTest.php
      ConstraintTest.php
      SuiteTest.php
      TestCaseTest.php
      TestFailureTest.php
      TestImplementorTest.php
      TestListenerTest.php
      Constraint=Constraint {
       CountTest.php
       ExceptionMessageRegExpTest.php
       ExceptionMessageTest.php
       JsonMatchesTest.php
       JsonMatches=JsonMatches {
        ErrorMessageProviderTest.php
       }
      }
     }
     Regression=Regression {
      1021.phpt
      523.phpt
      578.phpt
      684.phpt
      783.phpt
      1021=1021 {
       Issue1021Test.php
      }
      523=523 {
       Issue523Test.php
      }
      578=578 {
       Issue578Test.php
      }
      684=684 {
       Issue684Test.php
      }
      783=783 {
       ChildSuite.php
       OneTest.php
       ParentSuite.php
       TwoTest.php
      }
      GitHub=GitHub {
       1149.phpt
       1216.phpt
       1265.phpt
       1330.phpt
       1335.phpt
       1337.phpt
       1348.phpt
       1351.phpt
       1374.phpt
       1437.phpt
       1468.phpt
       1471.phpt
       1472.phpt
       1570.phpt
       244.phpt
       322.phpt
       433.phpt
       445.phpt
       498.phpt
       503.phpt
       581.phpt
       74.phpt
       765.phpt
       797.phpt
       863.phpt
       873-php5.phpt
       873-php7.phpt
       1149=1149 {
        Issue1149Test.php
       }
       1216=1216 {
        Issue1216Test.php
        bootstrap1216.php
        phpunit1216.xml
       }
       1265=1265 {
        Issue1265Test.php
        phpunit1265.xml
       }
       1330=1330 {
        Issue1330Test.php
        phpunit1330.xml
       }
       1335=1335 {
        Issue1335Test.php
        bootstrap1335.php
       }
       1337=1337 {
        Issue1337Test.php
       }
       1348=1348 {
        Issue1348Test.php
       }
       1351=1351 {
        ChildProcessClass1351.php
        Issue1351Test.php
       }
       1374=1374 {
        Issue1374Test.php
       }
       1437=1437 {
        Issue1437Test.php
       }
       1468=1468 {
        Issue1468Test.php
       }
       1471=1471 {
        Issue1471Test.php
       }
       1472=1472 {
        Issue1472Test.php
       }
       1570=1570 {
        Issue1570Test.php
       }
       244=244 {
        Issue244Test.php
       }
       322=322 {
        Issue322Test.php
        phpunit322.xml
       }
       433=433 {
        Issue433Test.php
       }
       445=445 {
        Issue445Test.php
       }
       498=498 {
        Issue498Test.php
       }
       503=503 {
        Issue503Test.php
       }
       581=581 {
        Issue581Test.php
       }
       74=74 {
        Issue74Test.php
        NewException.php
       }
       765=765 {
        Issue765Test.php
       }
       797=797 {
        Issue797Test.php
        bootstrap797.php
       }
       873=873 {
        Issue873Test.php
       }
      }
     }
     Runner=Runner {
      BaseTestRunnerTest.php
     }
     TextUI=TextUI {
      abstract-test-class.phpt
      colors-always.phpt
      concrete-test-class.phpt
      custom-printer-debug.phpt
      custom-printer-verbose.phpt
      dataprovider-debug.phpt
      dataprovider-log-xml-isolation.phpt
      dataprovider-log-xml.phpt
      dataprovider-testdox.phpt
      debug.phpt
      default-isolation.phpt
      default.phpt
      dependencies-isolation.phpt
      dependencies.phpt
      dependencies2-isolation.phpt
      dependencies2.phpt
      dependencies3-isolation.phpt
      dependencies3.phpt
      empty-testcase.phpt
      exception-stack.phpt
      exclude-group-isolation.phpt
      exclude-group.phpt
      failure-isolation.phpt
      failure.phpt
      fatal-isolation.phpt
      filter-class-isolation.phpt
      filter-class.phpt
      filter-dataprovider-by-classname-and-range-isolation.phpt
      filter-dataprovider-by-classname-and-range.phpt
      filter-dataprovider-by-number-isolation.phpt
      filter-dataprovider-by-number.phpt
      filter-dataprovider-by-only-range-isolation.phpt
      filter-dataprovider-by-only-range.phpt
      filter-dataprovider-by-only-regexp-isolation.phpt
      filter-dataprovider-by-only-regexp.phpt
      filter-dataprovider-by-only-string-isolation.phpt
      filter-dataprovider-by-only-string.phpt
      filter-dataprovider-by-range-isolation.phpt
      filter-dataprovider-by-range.phpt
      filter-dataprovider-by-regexp-isolation.phpt
      filter-dataprovider-by-regexp.phpt
      filter-dataprovider-by-string-isolation.phpt
      filter-dataprovider-by-string.phpt
      filter-method-case-insensitive.phpt
      filter-method-case-sensitive-no-result.phpt
      filter-method-isolation.phpt
      filter-method.phpt
      filter-no-results.phpt
      group-isolation.phpt
      group.phpt
      help.phpt
      help2.phpt
      ini-isolation.phpt
      list-groups.phpt
      log-json-no-pretty-print.phpt
      log-json-post-66021.phpt
      log-json-pre-66021.phpt
      log-tap.phpt
      log-xml.phpt
      output-isolation.phpt
      repeat.phpt
      report-useless-tests-incomplete.phpt
      report-useless-tests-isolation.phpt
      report-useless-tests.phpt
      tap.phpt
      test-suffix-multiple.phpt
      test-suffix-single.phpt
      testdox-html.phpt
      testdox-text.phpt
      testdox.phpt
     }
     Util=Util {
      ConfigurationTest.php
      GlobalStateTest.php
      RegexTest.php
      TestTest.php
      XMLTest.php
      TestDox=TestDox {
       NamePrettifierTest.php
      }
     }
     _files=_files {
      AbstractTest.php
      Author.php
      BankAccount.php
      BankAccountTest.php
      BankAccountTest.test.php
      BaseTestListenerSample.php
      BeforeAndAfterTest.php
      BeforeClassAndAfterClassTest.php
      Book.php
      Calculator.php
      ChangeCurrentWorkingDirectoryTest.php
      ClassWithNonPublicAttributes.php
      ClassWithScalarTypeDeclarations.php
      ClassWithToString.php
      ConcreteTest.my.php
      ConcreteTest.php
      CoverageClassExtendedTest.php
      CoverageClassTest.php
      CoverageFunctionParenthesesTest.php
      CoverageFunctionParenthesesWhitespaceTest.php
      CoverageFunctionTest.php
      CoverageMethodOneLineAnnotationTest.php
      CoverageMethodParenthesesTest.php
      CoverageMethodParenthesesWhitespaceTest.php
      CoverageMethodTest.php
      CoverageNoneTest.php
      CoverageNotPrivateTest.php
      CoverageNotProtectedTest.php
      CoverageNotPublicTest.php
      CoverageNothingTest.php
      CoveragePrivateTest.php
      CoverageProtectedTest.php
      CoveragePublicTest.php
      CoverageTwoDefaultClassAnnotations.php
      CoveredClass.php
      CoveredFunction.php
      CustomPrinter.php
      DataProviderDebugTest.php
      DataProviderFilterTest.php
      DataProviderIncompleteTest.php
      DataProviderSkippedTest.php
      DataProviderTest.php
      DependencyFailureTest.php
      DependencySuccessTest.php
      DependencyTestSuite.php
      DoubleTestCase.php
      DummyException.php
      EmptyTestCaseTest.php
      ExceptionInAssertPostConditionsTest.php
      ExceptionInAssertPreConditionsTest.php
      ExceptionInSetUpTest.php
      ExceptionInTearDownTest.php
      ExceptionInTest.php
      ExceptionNamespaceTest.php
      ExceptionStackTest.php
      ExceptionTest.php
      Failure.php
      FailureTest.php
      FatalTest.php
      IncompleteTest.php
      InheritedTestCase.php
      IniTest.php
      IsolationTest.php
      MockRunner.php
      MultiDependencyTest.php
      NamespaceCoverageClassExtendedTest.php
      NamespaceCoverageClassTest.php
      NamespaceCoverageCoversClassPublicTest.php
      NamespaceCoverageCoversClassTest.php
      NamespaceCoverageMethodTest.php
      NamespaceCoverageNotPrivateTest.php
      NamespaceCoverageNotProtectedTest.php
      NamespaceCoverageNotPublicTest.php
      NamespaceCoveragePrivateTest.php
      NamespaceCoverageProtectedTest.php
      NamespaceCoveragePublicTest.php
      NamespaceCoveredClass.php
      NoArgTestCaseTest.php
      NoTestCaseClass.php
      NoTestCases.php
      NonStatic.php
      NotExistingCoveredElementTest.php
      NotPublicTestCase.php
      NotVoidTestCase.php
      NothingTest.php
      OneTestCase.php
      OutputTestCase.php
      OverrideTestCase.php
      RequirementsClassBeforeClassHookTest.php
      RequirementsClassDocBlockTest.php
      RequirementsTest.php
      SampleArrayAccess.php
      SampleClass.php
      Singleton.php
      StackTest.php
      Struct.php
      Success.php
      TemplateMethodsTest.php
      TestIterator.php
      TestIterator2.php
      TestTestError.php
      ThrowExceptionTestCase.php
      ThrowNoExceptionTestCase.php
      WasRun.php
      bar.xml
      configuration.colors.empty.xml
      configuration.colors.false.xml
      configuration.colors.invalid.xml
      configuration.colors.true.xml
      configuration.custom-printer.xml
      configuration.xml
      configuration_empty.xml
      configuration_xinclude.xml
      expectedFileFormat.txt
      foo.xml
      structureAttributesAreSameButValuesAreNot.xml
      structureExpected.xml
      structureIgnoreTextNodes.xml
      structureIsSameButDataIsNot.xml
      structureWrongNumberOfAttributes.xml
      structureWrongNumberOfNodes.xml
      Inheritance=Inheritance {
       InheritanceA.php
       InheritanceB.php
      }
      JsonData=JsonData {
       arrayObject.json
       simpleObject.json
      }
     }
    }
   }
   phpunit-mock-objects=phpunit-mock-objects {
    CONTRIBUTING.md
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    build=build {
     travis-ci.xml
    }
    src=src {
     Framework=Framework {
      MockObject=MockObject {
       Generator.php
       Invocation.php
       InvocationMocker.php
       Invokable.php
       Matcher.php
       MockBuilder.php
       MockObject.php
       Stub.php
       Verifiable.php
       Builder=Builder {
        Identity.php
        InvocationMocker.php
        Match.php
        MethodNameMatch.php
        Namespace.php
        ParametersMatch.php
        Stub.php
       }
       Exception=Exception {
        BadMethodCallException.php
        Exception.php
        RuntimeException.php
       }
       Generator=Generator {
        mocked_class.tpl.dist
        mocked_class_method.tpl.dist
        mocked_clone.tpl.dist
        mocked_method.tpl.dist
        mocked_static_method.tpl.dist
        proxied_method.tpl.dist
        trait_class.tpl.dist
        unmocked_clone.tpl.dist
        wsdl_class.tpl.dist
        wsdl_method.tpl.dist
       }
       Invocation=Invocation {
        Object.php
        Static.php
       }
       Matcher=Matcher {
        AnyInvokedCount.php
        AnyParameters.php
        ConsecutiveParameters.php
        Invocation.php
        InvokedAtIndex.php
        InvokedAtLeastCount.php
        InvokedAtLeastOnce.php
        InvokedAtMostCount.php
        InvokedCount.php
        InvokedRecorder.php
        MethodName.php
        Parameters.php
        StatelessInvocation.php
       }
       Stub=Stub {
        ConsecutiveCalls.php
        Exception.php
        MatcherCollection.php
        Return.php
        ReturnArgument.php
        ReturnCallback.php
        ReturnSelf.php
        ReturnValueMap.php
       }
      }
     }
    }
    tests=tests {
     GeneratorTest.php
     MockBuilderTest.php
     MockObjectTest.php
     ProxyObjectTest.php
     bootstrap.php
     MockObject=MockObject {
      232.phpt
      abstract_class.phpt
      class.phpt
      class_call_parent_clone.phpt
      class_call_parent_constructor.phpt
      class_dont_call_parent_clone.phpt
      class_dont_call_parent_constructor.phpt
      class_implementing_interface_call_parent_constructor.phpt
      class_implementing_interface_dont_call_parent_constructor.phpt
      class_partial.phpt
      class_with_method_named_method.phpt
      class_with_method_with_variadic_arguments.phpt
      interface.phpt
      invocation_object_clone_object.phpt
      namespaced_class.phpt
      namespaced_class_call_parent_clone.phpt
      namespaced_class_call_parent_constructor.phpt
      namespaced_class_dont_call_parent_clone.phpt
      namespaced_class_dont_call_parent_constructor.phpt
      namespaced_class_implementing_interface_call_parent_constructor.phpt
      namespaced_class_implementing_interface_dont_call_parent_constructor.phpt
      namespaced_class_partial.phpt
      namespaced_interface.phpt
      nonexistent_class.phpt
      nonexistent_class_with_namespace.phpt
      nonexistent_class_with_namespace_starting_with_separator.phpt
      proxy.phpt
      scalar_type_declarations.phpt
      wsdl_class.phpt
      wsdl_class_namespace.phpt
      wsdl_class_partial.phpt
      Invocation=Invocation {
       ObjectTest.php
       StaticTest.php
      }
      Matcher=Matcher {
       ConsecutiveParametersTest.php
      }
     }
     _fixture=_fixture {
      AbstractMockTestClass.php
      AbstractTrait.php
      AnInterface.php
      AnotherInterface.php
      Bar.php
      ClassThatImplementsSerializable.php
      ClassWithStaticMethod.php
      Foo.php
      FunctionCallback.php
      GoogleSearch.wsdl
      InterfaceWithStaticMethod.php
      MethodCallback.php
      MethodCallbackByReference.php
      Mockable.php
      PartialMockTestClass.php
      SingletonClass.php
      SomeClass.php
      StaticMockTestClass.php
      TraversableMockTestInterface.php
     }
    }
   }
  }
  psr=psr {
   log=log {
    LICENSE
    README.md
    composer.json
    Psr=Psr {
     Log=Log {
      AbstractLogger.php
      InvalidArgumentException.php
      LogLevel.php
      LoggerAwareInterface.php
      LoggerAwareTrait.php
      LoggerInterface.php
      LoggerTrait.php
      NullLogger.php
      Test=Test {
       LoggerInterfaceTest.php
      }
     }
    }
   }
  }
  sebastian=sebastian {
   comparator=comparator {
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    build=build {
     travis-ci.xml
    }
    src=src {
     ArrayComparator.php
     Comparator.php
     ComparisonFailure.php
     DOMNodeComparator.php
     DateTimeComparator.php
     DoubleComparator.php
     ExceptionComparator.php
     Factory.php
     MockObjectComparator.php
     NumericComparator.php
     ObjectComparator.php
     ResourceComparator.php
     ScalarComparator.php
     SplObjectStorageComparator.php
     TypeComparator.php
    }
    tests=tests {
     ArrayComparatorTest.php
     DOMNodeComparatorTest.php
     DateTimeComparatorTest.php
     DoubleComparatorTest.php
     ExceptionComparatorTest.php
     FactoryTest.php
     MockObjectComparatorTest.php
     NumericComparatorTest.php
     ObjectComparatorTest.php
     ResourceComparatorTest.php
     ScalarComparatorTest.php
     SplObjectStorageComparatorTest.php
     TypeComparatorTest.php
     autoload.php
     bootstrap.php
     _files=_files {
      Author.php
      Book.php
      ClassWithToString.php
      SampleClass.php
      Struct.php
      TestClass.php
      TestClassComparator.php
     }
    }
   }
   diff=diff {
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    src=src {
     Chunk.php
     Diff.php
     Differ.php
     Line.php
     Parser.php
     LCS=LCS {
      LongestCommonSubsequence.php
      MemoryEfficientLongestCommonSubsequenceImplementation.php
      TimeEfficientLongestCommonSubsequenceImplementation.php
     }
    }
    tests=tests {
     DifferTest.php
     ParserTest.php
     LCS=LCS {
      TimeEfficientImplementationTest.php
     }
     fixtures=fixtures {
      patch.txt
      patch2.txt
     }
    }
   }
   environment=environment {
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    src=src {
     Console.php
     Runtime.php
    }
    tests=tests {
     ConsoleTest.php
     RuntimeTest.php
    }
   }
   exporter=exporter {
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    src=src {
     Exporter.php
    }
    tests=tests {
     ExporterTest.php
    }
   }
   global-state=global-state {
    LICENSE
    README.md
    build.xml
    composer.json
    build=build {
     phpunit.xml
    }
    src=src {
     Blacklist.php
     Exception.php
     Restorer.php
     RuntimeException.php
     Snapshot.php
    }
    tests=tests {
     BlacklistTest.php
     _fixture=_fixture {
      BlacklistedChildClass.php
      BlacklistedClass.php
      BlacklistedImplementor.php
      BlacklistedInterface.php
     }
    }
   }
   recursion-context=recursion-context {
    LICENSE
    README.md
    build.xml
    composer.json
    phpunit.xml.dist
    src=src {
     Context.php
     Exception.php
     InvalidArgumentException.php
    }
    tests=tests {
     ContextTest.php
    }
   }
   version=version {
    LICENSE
    README.md
    composer.json
    src=src {
     Version.php
    }
   }
  }
  symfony=symfony {
   yaml=yaml {
    CHANGELOG.md
    Dumper.php
    Escaper.php
    Inline.php
    LICENSE
    Parser.php
    README.md
    Unescaper.php
    Yaml.php
    composer.json
    phpunit.xml.dist
    Exception=Exception {
     DumpException.php
     ExceptionInterface.php
     ParseException.php
     RuntimeException.php
    }
    Tests=Tests {
     DumperTest.php
     InlineTest.php
     ParseExceptionTest.php
     ParserTest.php
     YamlTest.php
     Fixtures=Fixtures {
      YtsAnchorAlias.yml
      YtsBasicTests.yml
      YtsBlockMapping.yml
      YtsDocumentSeparator.yml
      YtsErrorTests.yml
      YtsFlowCollections.yml
      YtsFoldedScalars.yml
      YtsNullsAndEmpties.yml
      YtsSpecificationExamples.yml
      YtsTypeTransfers.yml
      embededPhp.yml
      escapedCharacters.yml
      index.yml
      sfComments.yml
      sfCompact.yml
      sfMergeKey.yml
      sfObjects.yml
      sfQuotes.yml
      sfTests.yml
      unindentedCollections.yml
     }
    }
   }
  }
 }
}
